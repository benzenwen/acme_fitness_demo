namespace: acmefit

cart:
  defines: runnable
  metadata:
    name: ACME Fit Cart
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/shopping_cart.svg
  containers:
    cart:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-cart:latest
  services:
    cart:
      port: <- $cart-port
      container: cart
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    redis:
      target: acmefit/redis-db
      service: redis
    user:
      target: acmefit/user
      service: user
  variables:
    auth-mode:
      env: AUTH_MODE
      type: string
      value: '1'
    cart-port:
      env: CART_PORT
      type: int
      value: 5000
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    redis-host:
      env: REDIS_HOST
      type: string
      value: <- connection-hostname("redis")
    redis-password:
      env: REDIS_PASSWORD
      type: string
      value: secret
    redis-port:
      env: REDIS_PORT
      type: string
      value: <- connection-port("redis")
    user-host:
      env: USER_HOST
      type: string
      value: <- connection-hostname("user")
    user-port:
      env: USER_PORT
      type: string
      value: <- connection-port("user")

catalog:
  defines: runnable
  metadata:
    name: ACME Fit Catalog
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/open_book.svg
  containers:
    catalog:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-catalog:1.2.1
  services:
    catalog:
      port: <- $catalog-port
      container: catalog
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    catalog-db:
      target: acmefit/catalog-db
      service: catalog-db
    user:
      target: acmefit/user
      service: user
  variables:
    catalog-db-host:
      env: CATALOG_DB_HOST
      type: string
      value: <- connection-hostname("catalog-db")
    catalog-db-password:
      env: CATALOG_DB_PASSWORD
      type: string
      value: secret
    catalog-db-port:
      env: CATALOG_DB_PORT
      type: string
      value: <- connection-port("catalog-db")
    catalog-db-username:
      env: CATALOG_DB_USERNAME
      type: string
      value: mongoadmin
    catalog-port:
      env: CATALOG_PORT
      type: int
      value: 8082
    catalog-version:
      env: CATALOG_VERSION
      type: string
      value: v1
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    users-host:
      env: USERS_HOST
      type: string
      value: <- connection-hostname("user")
    users-port:
      env: USERS_PORT
      type: string
      value: <- connection-port("user")

front-end:
  defines: runnable
  metadata:
    name: ACME Fit Front End
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/desktop_computer.svg
  containers:
    app:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-front-end:2.0.2
  services:
    app:
      port: <- $port
      host-port: <- $port
      container: app
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    cart:
      target: acmefit/cart
      service: cart
    catalog:
      target: acmefit/catalog
      service: catalog
    order:
      target: acmefit/order
      service: order
    users:
      target: acmefit/user
      service: user
  variables:
    cart-host:
      env: CART_HOST
      type: string
      value: <- connection-hostname("cart")
    cart-port:
      env: CART_PORT
      type: string
      value: <- connection-port("cart")
    catalog-host:
      env: CATALOG_HOST
      type: string
      value: <- connection-hostname("catalog")
    catalog-port:
      env: CATALOG_PORT
      type: string
      value: <- connection-port("catalog")
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    order-host:
      env: ORDER_HOST
      type: string
      value: <- connection-hostname("order")
    order-port:
      env: ORDER_PORT
      type: int
      value: <- connection-port("order")
    port:
      env: PORT
      type: int
      value: 3000
    users-host:
      env: USERS_HOST
      type: string
      value: <- connection-hostname("user")
    users-port:
      env: USERS_PORT
      type: int
      value: <- connection-port("user")
  
order:
  defines: runnable
  metadata:
    name: ACME Fit Order
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/inbox_tray.svg
  containers:
    order:
      image: gcr.io/vmwarecloudadvocacy/order-postgres-tracing:latest
  services:
    order:
      port: <- $order-port
      container: order
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    postgres:
      target: acmefit/postgres
      service: postgres
    user:
      target: acmefit/user
      service: user
    payment:
      target: acmefit/payment
      service: payment
  variables:
    auth-mode:
      env: AUTH_MODE
      type: string
      value: '1'
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    order-auth-db:
      env: ORDER_AUTH_DB
      type: string
      value: postgres
    order-db-host:
      env: ORDER_DB_HOST
      type: string
      value: <- connection-hostname("postgres")
    order-db-password:
      env: ORDER_DB_PASSWORD
      type: string
      value: password
    order-db-port:
      env: ORDER_DB_PORT
      type: int
      value: <- connection-port("postgres")
    order-db-username:
      env: ORDER_DB_USERNAME
      type: string
      value: postgres
    order-port:
      env: ORDER_PORT
      type: int
      value: 6000
    payment-host:
      env: PAYMENT_HOST
      type: string
      value: <- connection-hostname("payment")
    payment-port:
      env: PAYMENT_PORT
      type: int
      value: <- connection-port("payment")
    user-host:
      env: USER_HOST
      type: string
      value: <- connection-hostname("user")
    user-port:
      env: USER_PORT
      type: int
      value: <- connection-port("user")

payment:
  defines: runnable
  metadata:
    name: ACME Fit Payment
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/credit_card.svg
  containers:
    payment:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-payment:latest
  services:
    payment:
      port: <- $payment-port
      container: payment
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    user:
      target: acmefit/user
      service: user
  variables:
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    payment-port:
      env: PAYMENT_PORT
      type: int
      value: 9000
    users-host:
      env: USERS_HOST
      type: string
      value: <- connection-hostname("user")
    users-port:
      env: USERS_PORT
      type: string
      value: <- connection-port("user")

user:
  defines: runnable
  metadata:
    name: ACME Fit User
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://emojiapi.dev/api/v1/zany_face.svg
  containers:
    user:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-user:2.0.1
  services:
    user:
      port: 8083
      container: user
      protocol: tcp
  connections:
    jaeger:
      target: acmefit/jaeger
      service: jaeger
    user-redis-db:
      target: acmefit/user-redis-db
      service: user-redis-db
    user-db:
      target: acmefit/user-db
      service: user-db
  variables:
    jaeger-agent-host:
      env: JAEGER_AGENT_HOST
      type: string
      value: <- connection-hostname("jaeger")
    jaeger-agent-port:
      env: JAEGER_AGENT_PORT
      type: string
      value: <- connection-port("jaeger")
    redis-db-host:
      env: REDIS_DB_HOST
      type: string
      value: <- connection-hostname("user-redis-db")
    redis-db-password:
      env: REDIS_DB_PASSWORD
      type: string
      value: secret
    redis-db-port:
      env: REDIS_DB_PORT
      type: int
      value: <- connection-port("user-redis-db")
    users-db-host:
      env: USERS_DB_HOST
      type: string
      value: <- connection-hostname("user-db")
    users-db-password:
      env: USERS_DB_PASSWORD
      type: string
      value: secret
    users-db-port:
      env: USERS_DB_PORT
      type: int
      value: <- connection-port("user-db")
    users-db-username:
      env: USERS_DB_USERNAME
      type: string
      value: mongoadmin
    users-port:
      env: USERS_PORT
      type: int
      value: 8083

postgres:
  defines: runnable
  metadata:
    name: ACME Fit Postgres
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Postgresql_elephant.svg/1200px-Postgresql_elephant.svg.png
  containers:
    postgres:
      image: postgres:12.1-alpine
  services:
    postgres:
      port: 5432
      container: postgres
      protocol: tcp
  variables:
    postgres-db:
      env: POSTGRES_DB
      type: string
      value: postgres
    postgres-password:
      env: POSTGRES_PASSWORD
      type: string
      value: password
    postgres-user:
      env: POSTGRES_USER
      type: string
      value: postgres

redis-db:
  defines: runnable
  metadata:
    name: ACME Fit Redis
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://cdn4.iconfinder.com/data/icons/redis-2/1451/Untitled-2-512.png
  containers:
    db:
      image: bitnami/redis
  services:
    redis-db:
      port: 6379
      container: db
      protocol: tcp
  variables:
    redis-password:
      env: REDIS_PASSWORD
      type: string
      value: secret

user-db:
  defines: runnable
  metadata:
    name: ACME Fit User DB
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://visualpharm.com/assets/530/Database-595b40b75ba036ed117d7bf6.svg
  containers:
    db:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-user-db:latest
  services:
    user-db:
      port: 27017
      container: db
      protocol: tcp
  variables:
    mongo-initdb-database:
      env: MONGO_INITDB_DATABASE
      type: string
      value: acmefit
    mongo-initdb-root-password:
      env: MONGO_INITDB_ROOT_PASSWORD
      type: string
      value: secret
    mongo-initdb-root-username:
      env: MONGO_INITDB_ROOT_USERNAME
      type: string
      value: mongoadmin

user-redis-db:
  defines: runnable
  metadata:
    name: ACME Fit User Redis DB
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://cdn4.iconfinder.com/data/icons/redis-2/1451/Untitled-2-512.png
  containers:
    db:
      image: bitnami/redis
  services:
    user-redis-db:
      port: 6379
      container: db
      protocol: tcp
  variables:
    redis-password:
      env: REDIS_PASSWORD
      type: string
      value: secret

catalog-db:
  defines: runnable
  metadata:
    name: ACME Fit Catalog DB
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://visualpharm.com/assets/530/Database-595b40b75ba036ed117d7bf6.svg
  containers:
    db:
      image: gcr.io/vmwarecloudadvocacy/acmeshop-catalog-db:latest
  services:
    catalog-db:
      port: 27017
      container: db
      protocol: tcp
  variables:
    mongo-initdb-database:
      env: MONGO_INITDB_DATABASE
      type: string
      value: acmefit
    mongo-initdb-root-password:
      env: MONGO_INITDB_ROOT_PASSWORD
      type: string
      value: secret
    mongo-initdb-root-username:
      env: MONGO_INITDB_ROOT_USERNAME
      type: string
      value: mongoadmin

jaeger:
  defines: runnable
  metadata:
    name: ACME Fit Jaeger
    description: Part of ACME Fitness cloud demo.
    website: https://github.com/vmwarecloudadvocacy/acme_fitness_demo
    publisher: nooga
    icon: https://www.jaegertracing.io/img/jaeger-icon-reverse-color.svg
  containers:
    jaeger:
      image: jaegertracing/all-in-one:1.11
  services:
    jaeger:
      port: 6831
      container: jaeger
      protocol: udp
    jaeger-bin:
      port: 6832
      container: jaeger
      protocol: udp
    jaeger-ui:
      port: 16686
      host-port: 16686
      container: jaeger
      protocol: tcp
    jaeger-zipkin:
      port: 5775
      container: jaeger
      protocol: udp
    jaeger-http:
      port: 5778
      container: jaeger
      protocol: tcp
